{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jesus_rubio/github/nextpage/src/components/SectionForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { markdownify } from '../utils';\nimport FormField from './FormField';\nexport default class SectionForm extends React.Component {\n  render() {\n    const section = _.get(this.props, 'section');\n\n    const sectionId = _.get(section, 'section_id');\n\n    const title = _.get(section, 'title');\n\n    const content = _.get(section, 'content');\n\n    const formId = _.get(section, 'form_id');\n\n    const formAction = _.get(section, 'form_action');\n\n    const formFields = _.get(section, 'form_fields');\n\n    const submitLabel = _.get(section, 'submit_label');\n\n    const formHoneypotInputId = formId + '-honeypot';\n    const formHoneypotLabelId = formId + '-honeypot-label';\n    const formHoneypotName = formId + '-bot-field';\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: sectionId,\n      className: \"block block-form\",\n      children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"block-title underline inner-sm\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-content inner-sm\",\n        children: [content && markdownify(content), /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n          name: formId,\n          id: formId\n        }, formAction ? {\n          action: formAction\n        } : null), {}, {\n          method: \"POST\",\n          \"data-netlify\": \"true\",\n          \"data-netlify-honeypot\": formHoneypotName,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"screen-reader-text\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              id: formHoneypotLabelId,\n              htmlFor: formHoneypotInputId,\n              children: [\"Don't fill this out if you're human:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                \"aria-labelledby\": formHoneypotLabelId,\n                id: formHoneypotInputId,\n                name: formHoneypotName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            name: \"form-name\",\n            value: formId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), _.map(formFields, (field, index) => /*#__PURE__*/_jsxDEV(FormField, {\n            field: field\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-submit\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"button\",\n              children: submitLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/jesus_rubio/github/nextpage/src/components/SectionForm.js"],"names":["React","_","markdownify","FormField","SectionForm","Component","render","section","get","props","sectionId","title","content","formId","formAction","formFields","submitLabel","formHoneypotInputId","formHoneypotLabelId","formHoneypotName","action","map","field","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport { markdownify } from '../utils';\nimport FormField from './FormField';\n\nexport default class SectionForm extends React.Component {\n    render() {\n        const section = _.get(this.props, 'section');\n        const sectionId = _.get(section, 'section_id');\n        const title = _.get(section, 'title');\n        const content = _.get(section, 'content');\n        const formId = _.get(section, 'form_id');\n        const formAction = _.get(section, 'form_action');\n        const formFields = _.get(section, 'form_fields');\n        const submitLabel = _.get(section, 'submit_label');\n        const formHoneypotInputId = formId + '-honeypot';\n        const formHoneypotLabelId = formId + '-honeypot-label';\n        const formHoneypotName = formId + '-bot-field';\n\n        return (\n            <section id={sectionId} className=\"block block-form\">\n                {title && <h2 className=\"block-title underline inner-sm\">{title}</h2>}\n                <div className=\"block-content inner-sm\">\n                    {content && markdownify(content)}\n                    <form\n                        name={formId}\n                        id={formId}\n                        {...(formAction ? ({ action: formAction }) : null)}\n                        method=\"POST\"\n                        data-netlify=\"true\"\n                        data-netlify-honeypot={formHoneypotName}\n                    >\n                        <div className=\"screen-reader-text\">\n                            <label id={formHoneypotLabelId} htmlFor={formHoneypotInputId}>\n                                Don't fill this out if you're human: \n                                <input aria-labelledby={formHoneypotLabelId} id={formHoneypotInputId} name={formHoneypotName} />\n                            </label>\n                        </div>\n                        <input type=\"hidden\" name=\"form-name\" value={formId} />\n                        {_.map(formFields, (field, index) => (\n                            <FormField key={index} field={field} />\n                        ))}\n                        <div className=\"form-submit\">\n                            <button type=\"submit\" className=\"button\">{submitLabel}</button>\n                        </div>\n                    </form>\n                </div>\n            </section>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}