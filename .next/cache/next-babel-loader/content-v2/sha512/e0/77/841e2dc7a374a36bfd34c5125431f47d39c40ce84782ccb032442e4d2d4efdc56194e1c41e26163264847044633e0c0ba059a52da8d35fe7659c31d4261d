{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jesus_rubio/github/nextpage/src/layouts/advanced.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport components, { Layout } from '../components/index';\nimport { getPageUrl } from '../utils';\nexport default class Advanced extends React.Component {\n  render() {\n    const data = _.get(this.props, 'data');\n\n    const config = _.get(data, 'config');\n\n    const posts = _.get(this.props, 'posts');\n\n    const page = _.get(this.props, 'page');\n\n    const hideTitle = _.get(page, 'hide_title');\n\n    const title = _.get(page, 'title');\n\n    const sections = _.get(page, 'sections');\n\n    const pageUrl = getPageUrl(page);\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      page: page,\n      config: config,\n      children: [!hideTitle && /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"post-header inner-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"post-title underline\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), _.map(sections, (section, index) => {\n        const sectionType = _.get(section, 'type');\n\n        const component = _.upperFirst(_.camelCase(sectionType));\n\n        if (!component) {\n          throw new Error(`page section does not have the 'type' property, page: ${pageUrl}`);\n        }\n\n        const Component = components[component];\n\n        if (!Component) {\n          throw new Error(`no component matching the page section's type: ${sectionType}`);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Component, {\n          section: section,\n          data: data,\n          posts: posts\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/jesus_rubio/github/nextpage/src/layouts/advanced.js"],"names":["React","_","components","Layout","getPageUrl","Advanced","Component","render","data","get","props","config","posts","page","hideTitle","title","sections","pageUrl","map","section","index","sectionType","component","upperFirst","camelCase","Error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,UAAP,IAAqBC,MAArB,QAAmC,qBAAnC;AACA,SAASC,UAAT,QAA2B,UAA3B;AAEA,eAAe,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAClDC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAGP,CAAC,CAACQ,GAAF,CAAM,KAAKC,KAAX,EAAkB,MAAlB,CAAb;;AACA,UAAMC,MAAM,GAAGV,CAAC,CAACQ,GAAF,CAAMD,IAAN,EAAY,QAAZ,CAAf;;AACA,UAAMI,KAAK,GAAGX,CAAC,CAACQ,GAAF,CAAM,KAAKC,KAAX,EAAkB,OAAlB,CAAd;;AACA,UAAMG,IAAI,GAAGZ,CAAC,CAACQ,GAAF,CAAM,KAAKC,KAAX,EAAkB,MAAlB,CAAb;;AACA,UAAMI,SAAS,GAAGb,CAAC,CAACQ,GAAF,CAAMI,IAAN,EAAY,YAAZ,CAAlB;;AACA,UAAME,KAAK,GAAGd,CAAC,CAACQ,GAAF,CAAMI,IAAN,EAAY,OAAZ,CAAd;;AACA,UAAMG,QAAQ,GAAGf,CAAC,CAACQ,GAAF,CAAMI,IAAN,EAAY,UAAZ,CAAjB;;AACA,UAAMI,OAAO,GAAGb,UAAU,CAACS,IAAD,CAA1B;AAEA,wBACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEA,IAAd;AAAoB,MAAA,MAAM,EAAEF,MAA5B;AAAA,iBACK,CAACG,SAAD,iBACG;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,sBAAd;AAAA,oBAAsCC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFR,EAMKd,CAAC,CAACiB,GAAF,CAAMF,QAAN,EAAgB,CAACG,OAAD,EAAUC,KAAV,KAAoB;AACjC,cAAMC,WAAW,GAAGpB,CAAC,CAACQ,GAAF,CAAMU,OAAN,EAAe,MAAf,CAApB;;AACA,cAAMG,SAAS,GAAGrB,CAAC,CAACsB,UAAF,CAAatB,CAAC,CAACuB,SAAF,CAAYH,WAAZ,CAAb,CAAlB;;AACA,YAAI,CAACC,SAAL,EAAgB;AACZ,gBAAM,IAAIG,KAAJ,CAAW,yDAAwDR,OAAQ,EAA3E,CAAN;AACH;;AACD,cAAMX,SAAS,GAAGJ,UAAU,CAACoB,SAAD,CAA5B;;AACA,YAAI,CAAChB,SAAL,EAAgB;AACZ,gBAAM,IAAImB,KAAJ,CAAW,kDAAiDJ,WAAY,EAAxE,CAAN;AACH;;AACD,4BAAO,QAAC,SAAD;AAAuB,UAAA,OAAO,EAAEF,OAAhC;AAAyC,UAAA,IAAI,EAAEX,IAA/C;AAAqD,UAAA,KAAK,EAAEI;AAA5D,WAAgBQ,KAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAXA,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AAhCiD","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport components, { Layout } from '../components/index';\nimport { getPageUrl } from '../utils';\n\nexport default class Advanced extends React.Component {\n    render() {\n        const data = _.get(this.props, 'data');\n        const config = _.get(data, 'config');\n        const posts = _.get(this.props, 'posts');\n        const page = _.get(this.props, 'page');\n        const hideTitle = _.get(page, 'hide_title');\n        const title = _.get(page, 'title');\n        const sections = _.get(page, 'sections');\n        const pageUrl = getPageUrl(page);\n\n        return (\n            <Layout page={page} config={config}>\n                {!hideTitle && (\n                    <header className=\"post-header inner-sm\">\n                        <h1 className=\"post-title underline\">{title}</h1>\n                    </header>\n                )}\n                {_.map(sections, (section, index) => {\n                    const sectionType = _.get(section, 'type');\n                    const component = _.upperFirst(_.camelCase(sectionType));\n                    if (!component) {\n                        throw new Error(`page section does not have the 'type' property, page: ${pageUrl}`);\n                    }\n                    const Component = components[component];\n                    if (!Component) {\n                        throw new Error(`no component matching the page section's type: ${sectionType}`);\n                    }\n                    return <Component key={index} section={section} data={data} posts={posts} />;\n                })}\n            </Layout>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}