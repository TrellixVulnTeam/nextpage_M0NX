{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/jesus_rubio/github/nextpage/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jesus_rubio/github/nextpage/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/jesus_rubio/github/nextpage/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/jesus_rubio/github/nextpage/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jesus_rubio/github/nextpage/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/jesus_rubio/github/nextpage/src/components/SectionContent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { withPrefix, markdownify } from '../utils';\nimport CtaButtons from './CtaButtons';\n\nvar SectionContent = /*#__PURE__*/function (_React$Component) {\n  _inherits(SectionContent, _React$Component);\n\n  var _super = _createSuper(SectionContent);\n\n  function SectionContent() {\n    _classCallCheck(this, SectionContent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SectionContent, [{\n    key: \"render\",\n    value: function render() {\n      var section = _.get(this.props, 'section');\n\n      var sectionId = _.get(section, 'section_id');\n\n      var title = _.get(section, 'title');\n\n      var image = _.get(section, 'image');\n\n      var imageAlt = _.get(section, 'image_alt', '');\n\n      var content = _.get(section, 'content');\n\n      var actions = _.get(section, 'actions');\n\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        id: sectionId,\n        className: \"block block-text\",\n        children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"block-title underline inner-sm\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 27\n        }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: withPrefix(image),\n            alt: imageAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), content && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-content inner-sm\",\n          children: markdownify(content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this), !_.isEmpty(actions) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-buttons inner-sm\",\n          children: /*#__PURE__*/_jsxDEV(CtaButtons, {\n            actions: actions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return SectionContent;\n}(React.Component);\n\nexport { SectionContent as default };","map":{"version":3,"sources":["/home/jesus_rubio/github/nextpage/src/components/SectionContent.js"],"names":["React","_","withPrefix","markdownify","CtaButtons","SectionContent","section","get","props","sectionId","title","image","imageAlt","content","actions","isEmpty","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,UAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEqBC,c;;;;;;;;;;;;;6BACR;AACL,UAAMC,OAAO,GAAGL,CAAC,CAACM,GAAF,CAAM,KAAKC,KAAX,EAAkB,SAAlB,CAAhB;;AACA,UAAMC,SAAS,GAAGR,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,YAAf,CAAlB;;AACA,UAAMI,KAAK,GAAGT,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,OAAf,CAAd;;AACA,UAAMK,KAAK,GAAGV,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,OAAf,CAAd;;AACA,UAAMM,QAAQ,GAAGX,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,WAAf,EAA4B,EAA5B,CAAjB;;AACA,UAAMO,OAAO,GAAGZ,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,SAAf,CAAhB;;AACA,UAAMQ,OAAO,GAAGb,CAAC,CAACM,GAAF,CAAMD,OAAN,EAAe,SAAf,CAAhB;;AAEA,0BACI;AAAS,QAAA,EAAE,EAAEG,SAAb;AAAwB,QAAA,SAAS,EAAC,kBAAlC;AAAA,mBACKC,KAAK,iBAAI;AAAI,UAAA,SAAS,EAAC,gCAAd;AAAA,oBAAgDA;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADd,EAEKC,KAAK,iBACF;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI;AAAK,YAAA,GAAG,EAAET,UAAU,CAACS,KAAD,CAApB;AAA6B,YAAA,GAAG,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHR,EAOKC,OAAO,iBAAI;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,oBAAyCV,WAAW,CAACU,OAAD;AAApD;AAAA;AAAA;AAAA;AAAA,gBAPhB,EAQK,CAACZ,CAAC,CAACc,OAAF,CAAUD,OAAV,CAAD,iBACG;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBH;;;;EA1BuCd,KAAK,CAACgB,S;;SAA7BX,c","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\n\nimport { withPrefix, markdownify } from '../utils';\nimport CtaButtons from './CtaButtons';\n\nexport default class SectionContent extends React.Component {\n    render() {\n        const section = _.get(this.props, 'section');\n        const sectionId = _.get(section, 'section_id');\n        const title = _.get(section, 'title');\n        const image = _.get(section, 'image');\n        const imageAlt = _.get(section, 'image_alt', '');\n        const content = _.get(section, 'content');\n        const actions = _.get(section, 'actions');\n\n        return (\n            <section id={sectionId} className=\"block block-text\">\n                {title && <h2 className=\"block-title underline inner-sm\">{title}</h2>}\n                {image && (\n                    <div className=\"block-image\">\n                        <img src={withPrefix(image)} alt={imageAlt} />\n                    </div>\n                )}\n                {content && <div className=\"block-content inner-sm\">{markdownify(content)}</div>}\n                {!_.isEmpty(actions) && (\n                    <div className=\"block-buttons inner-sm\">\n                        <CtaButtons actions={actions} />\n                    </div>\n                )}\n            </section>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}